Index: JS Arrays and Strings – Lab/ 1. Sum First and Last Array Elements .js
===================================================================
diff --git a/JS Arrays and Strings – Lab/ 1. Sum First and Last Array Elements .js b/JS Arrays and Strings – Lab/ 1. Sum First and Last Array Elements .js
deleted file mode 100644
--- a/JS Arrays and Strings – Lab/ 1. Sum First and Last Array Elements .js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ /dev/null	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
@@ -1,7 +0,0 @@
-function sumFirstLast(args) {
-    let sum = args[0] + args[args.length - 1];
-    console.log(sum);
-}
-sumFirstLast([20, 30, 40])
-sumFirstLast([10, 17, 22, 33])
-sumFirstLast([11, 58, 69])
\ No newline at end of file
Index: JS Arrays and Strings – Lab/6. Count String Occurrences.js
===================================================================
diff --git a/JS Arrays and Strings – Lab/6. Count String Occurrences.js b/JS Arrays and Strings – Lab/6. Count String Occurrences.js
deleted file mode 100644
--- a/JS Arrays and Strings – Lab/6. Count String Occurrences.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ /dev/null	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
@@ -1,12 +0,0 @@
-function countOccuttences(text, word) {
-    let count = 0
-    let array = text.split(' ')
-    
-    for (let index = 0; index < array.length; index++) {
-        if (array[index] === word) count +=1;
-        
-    }
-    console.log(count);
-}
-countOccuttences('This is a word and it also is a sentence', 'is')
-countOccuttences('softuni is great place for learning new programming languages', 'softuni')
\ No newline at end of file
Index: JS Arrays and Strings – Lab/4. Substring.JS
===================================================================
diff --git a/JS Arrays and Strings – Lab/4. Substring.JS b/JS Arrays and Strings – Lab/4. Substring.JS
deleted file mode 100644
--- a/JS Arrays and Strings – Lab/4. Substring.JS	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ /dev/null	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
@@ -1,6 +0,0 @@
-function substring(string, index, count) {
-    let text = string.substring(index, index + count);
-    console.log(text);
-}
-substring('ASentence', 1, 8);
-substring('SkipWord', 4, 7);
\ No newline at end of file
Index: JS Syntax Fundamentals – Exercises/11. Road Radar.js
===================================================================
diff --git a/JS Syntax Fundamentals – Exercises/11. Road Radar.js b/JS Syntax Fundamentals – Exercises/11. Road Radar.js
deleted file mode 100644
--- a/JS Syntax Fundamentals – Exercises/11. Road Radar.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ /dev/null	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
@@ -1,20 +0,0 @@
-    function drive(speed, area) {
-        let diff = 0;
-        let status = '';
-        let areaObj = {motorway: 130, interstate: 90, city: 50, residential: 20}
-        if (area in areaObj) {
-            if ( areaObj[area] >= speed){
-            console.log(`Driving ${speed} km/h in a ${areaObj[area]} zone`)
-        } else {
-            diff = speed - areaObj[area];
-            if (diff <= 20) status = "speeding";
-            else if (diff <= 40) status = "excessive speeding";
-            else status = "reckless driving";
-            console.log(`The speed is ${diff} km/h faster than the allowed speed of ${areaObj[area]} - ${status}`)
-        }
-    }
-    }
-    drive(40, 'city')
-    drive(21, 'residential')
-    drive(120, 'interstate')
-    drive(200, 'motorway')
\ No newline at end of file
Index: JS Syntax Fundamentals – Exercises/12. Cooking by Numbers.js
===================================================================
diff --git a/JS Syntax Fundamentals – Exercises/12. Cooking by Numbers.js b/JS Syntax Fundamentals – Exercises/12. Cooking by Numbers.js
deleted file mode 100644
--- a/JS Syntax Fundamentals – Exercises/12. Cooking by Numbers.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ /dev/null	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
@@ -1,14 +0,0 @@
-function cookingNumbers(num, ...operations) {
-    for (let i = 0; i < operations.length; i++) {
-        switch (operations[i]) {
-            case 'chop': num /= 2; break;
-            case 'dice': num = Math.sqrt(num); break;
-            case 'spice': num += 1; break;
-            case 'bake': num *= 3; break;
-            case 'fillet': num *= 0.80; break;
-        }
-        console.log(num);
-    }
-}
-cookingNumbers('32', 'chop', 'chop', 'chop', 'chop', 'chop')
-cookingNumbers('9', 'dice', 'spice', 'chop', 'bake', 'fillet')
\ No newline at end of file
Index: JS Arrays and Strings – Lab/3. Even and Odd Subtraction.js
===================================================================
diff --git a/JS Arrays and Strings – Lab/3. Even and Odd Subtraction.js b/JS Arrays and Strings – Lab/3. Even and Odd Subtraction.js
deleted file mode 100644
--- a/JS Arrays and Strings – Lab/3. Even and Odd Subtraction.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ /dev/null	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
@@ -1,15 +0,0 @@
-function evenOddSubtraction(args) {
-    let even = 0;
-    let odd = 0;
-    for (let index = 0; index < args.length; index++) {
-        if (args[index] % 2 === 0) {
-            even += args[index];
-        } else {
-            odd += args[index];
-        }
-    }
-    console.log(even - odd);
-}
-evenOddSubtraction([1,2,3,4,5,6])
-evenOddSubtraction([3,5,7,9])
-evenOddSubtraction([2,4,6,8,10])
\ No newline at end of file
Index: JS Arrays and Strings – Lab/ 2. Reverse an Array of Numbers.js
===================================================================
diff --git a/JS Arrays and Strings – Lab/ 2. Reverse an Array of Numbers.js b/JS Arrays and Strings – Lab/ 2. Reverse an Array of Numbers.js
deleted file mode 100644
--- a/JS Arrays and Strings – Lab/ 2. Reverse an Array of Numbers.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ /dev/null	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
@@ -1,7 +0,0 @@
-function reverseNumbers(...args) {
-    let array = [...args[args.length -1]]
-    console.log(array.slice(0,args[0]).reverse().join(' '))
-}
-reverseNumbers(3, [10, 20, 30, 40, 50])
-reverseNumbers(4, [-1, 20, 99, 5])
-reverseNumbers(2, [66, 43, 75, 89, 47])
\ No newline at end of file
Index: JS Arrays and Strings – Lab/5. Censored Words.js
===================================================================
diff --git a/JS Arrays and Strings – Lab/5. Censored Words.js b/JS Arrays and Strings – Lab/5. Censored Words.js
deleted file mode 100644
--- a/JS Arrays and Strings – Lab/5. Censored Words.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ /dev/null	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
@@ -1,8 +0,0 @@
-function censoredWord(text, word) {
-    while (text.includes(word)) {
-        text = text.replace(word, '*'.repeat(word.length));
-    }
-    console.log(text);
-}
-censoredWord('A small sentence with some words', 'small');
-censoredWord('Find the hidden word', 'hidden');
\ No newline at end of file
Index: JS Syntax Fundamentals – Exercises/04.Print and Sum.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function printSum(num1, num2) {\n  let sum = 0;\n  let allNums = \"\";\n\n  for (let index = num1; index <= num2; index++) {\n    sum += index;\n    allNums += index + \" \";\n  }\n  console.log(allNums);\n  console.log(`Sum: ${sum}`);\n}\nprintSum(5, 10);\nprintSum(0, 26);\nprintSum(50, 60);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Exercises/04.Print and Sum.js b/JS Syntax Fundamentals – Exercises/04.Print and Sum.js
--- a/JS Syntax Fundamentals – Exercises/04.Print and Sum.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Exercises/04.Print and Sum.js	(date 1698698407667)
@@ -11,4 +11,4 @@
 }
 printSum(5, 10);
 printSum(0, 26);
-printSum(50, 60);
\ No newline at end of file
+printSum(50, 60);
Index: JS Syntax Fundamentals – Lab/01. Multiply the Number by 2.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function solve(num) {\n  console.log(num * 2);\n}\nsolve(2);\nsolve(5);\nsolve(20);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/01. Multiply the Number by 2.js b/JS Syntax Fundamentals – Lab/01. Multiply the Number by 2.js
--- a/JS Syntax Fundamentals – Lab/01. Multiply the Number by 2.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/01. Multiply the Number by 2.js	(date 1698698407687)
@@ -3,4 +3,4 @@
 }
 solve(2);
 solve(5);
-solve(20);
\ No newline at end of file
+solve(20);
Index: JS Syntax Fundamentals – Lab/09. Numbers from 1 to 5.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function numbersPrint() {\n  for (let index = 1; index <= 5; index++) {\n    console.log(index);\n  }\n}\nnumbersPrint();
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/09. Numbers from 1 to 5.js b/JS Syntax Fundamentals – Lab/09. Numbers from 1 to 5.js
--- a/JS Syntax Fundamentals – Lab/09. Numbers from 1 to 5.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/09. Numbers from 1 to 5.js	(date 1698698392947)
@@ -3,4 +3,5 @@
     console.log(index);
   }
 }
-numbersPrint();
\ No newline at end of file
+
+numbersPrint();
Index: JS Syntax Fundamentals – Lab/05.Math Operations.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function mathOperations(num1, num2, operator) {\n  let result;\n\n  switch (operator) {\n    case \"+\":\n      result = num1 + num2;\n      break;\n    case \"-\":\n      result = num1 - num2;\n      break;\n    case \"*\":\n      result = num1 * num2;\n      break;\n    case \"/\":\n      result = num1 / num2;\n      break;\n    case \"%\":\n      result = num1 % num2;\n      break;\n    case \"**\":\n      result = num1 ** num2;\n      break;\n  }\n  console.log(result);\n}\nmathOperations(2, 3, \"+\");\nmathOperations(3, 5.5, \"*\");
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/05.Math Operations.js b/JS Syntax Fundamentals – Lab/05.Math Operations.js
--- a/JS Syntax Fundamentals – Lab/05.Math Operations.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/05.Math Operations.js	(date 1698698393083)
@@ -24,4 +24,4 @@
   console.log(result);
 }
 mathOperations(2, 3, "+");
-mathOperations(3, 5.5, "*");
\ No newline at end of file
+mathOperations(3, 5.5, "*");
Index: JS Syntax Fundamentals – Lab/07.Theatre Promotions.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function ticketSale(day, age) {\n  let price;\n  const days = [\"Weekday\", \"Weekend\", \"Holiday\"];\n\n  if (0 <= age && age <= 122) {\n    if (day === days[0] && 0 <= age && age <= 18) {\n      price = \"12$\";\n    } else if (day === days[0] && 18 <= age && age <= 64) {\n      price = \"18$\";\n    } else if (day === days[0] && 64 <= age && age <= 122) {\n      price = \"12$\";\n    } else if (day === days[1] && 0 <= age && age <= 18) {\n      price = \"15$\";\n    } else if (day === days[1] && 18 <= age && age <= 64) {\n      price = \"20$\";\n    } else if (day === days[1] && 64 <= age && age <= 122) {\n      price = \"15$\";\n    } else if (day === days[2] && 0 <= age && age <= 18) {\n      price = \"5$\";\n    } else if (day === days[2] && 18 <= age && age <= 64) {\n      price = \"12$\";\n    } else if (day === days[2] && 64 <= age && age <= 122) {\n      price = \"10$\";\n    }\n  } else {\n    price = \"Error!\";\n  }\n  console.log(price);\n}\nticketSale(\"Weekend\", 42);\nticketSale(\"Holiday\", -12);\nticketSale(\"Holiday\", 15);\nticketSale(\"Weekday\", 42);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/07.Theatre Promotions.js b/JS Syntax Fundamentals – Lab/07.Theatre Promotions.js
--- a/JS Syntax Fundamentals – Lab/07.Theatre Promotions.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/07.Theatre Promotions.js	(date 1698698393027)
@@ -30,4 +30,4 @@
 ticketSale("Weekend", 42);
 ticketSale("Holiday", -12);
 ticketSale("Holiday", 15);
-ticketSale("Weekday", 42);
\ No newline at end of file
+ticketSale("Weekday", 42);
Index: JS Syntax Fundamentals – Exercises/03. Leap Year.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function leapYear(year) {\n  let output;\n  if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) output = \"yes\";\n  else output = \"no\";\n  console.log(output);\n}\nleapYear(4);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Exercises/03. Leap Year.js b/JS Syntax Fundamentals – Exercises/03. Leap Year.js
--- a/JS Syntax Fundamentals – Exercises/03. Leap Year.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Exercises/03. Leap Year.js	(date 1698698407639)
@@ -4,4 +4,4 @@
   else output = "no";
   console.log(output);
 }
-leapYear(4);
\ No newline at end of file
+leapYear(4);
Index: JS Syntax Fundamentals – Lab/06.Largest Number.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function largestNumber(num1, num2, num3) {\n  const numbers = [num1, num2, num3];\n  const result = numbers.sort((a, b) => a - b)[2];\n\n  console.log(`The largest number is ${result}.`);\n}\nlargestNumber(5, -3, 16);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/06.Largest Number.js b/JS Syntax Fundamentals – Lab/06.Largest Number.js
--- a/JS Syntax Fundamentals – Lab/06.Largest Number.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/06.Largest Number.js	(date 1698698393007)
@@ -4,4 +4,4 @@
 
   console.log(`The largest number is ${result}.`);
 }
-largestNumber(5, -3, 16);
\ No newline at end of file
+largestNumber(5, -3, 16);
Index: JS Syntax Fundamentals – Exercises/01. Ages.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function ages(age) {\n  let result;\n\n  if (0 <= age && age <= 2) {\n    result = \"baby\";\n  } else if (3 <= age && age <= 13) {\n    result = \"child\";\n  } else if (14 <= age && age <= 19) {\n    result = \"teenager\";\n  } else if (20 <= age && age <= 65) {\n    result = \"adult\";\n  } else if (age >= 66) {\n    result = \"elder\";\n  } else {\n    result = \"out of bounds\";\n  }\n  console.log(result);\n}\nages(20);\nages(1);\nages(100);\nages(-1);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Exercises/01. Ages.js b/JS Syntax Fundamentals – Exercises/01. Ages.js
--- a/JS Syntax Fundamentals – Exercises/01. Ages.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Exercises/01. Ages.js	(date 1698698393099)
@@ -19,4 +19,4 @@
 ages(20);
 ages(1);
 ages(100);
-ages(-1);
\ No newline at end of file
+ages(-1);
Index: JS Syntax Fundamentals – Exercises/02.Vacantion.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function vacation(peoples, type, day) {\n  let price = 0;\n  const types = [\"Students\", \"Business\", \"Regular\"];\n  const days = [\"Friday\", \"Saturday\", \"Sunday\"];\n\n  if (day === days[0]) {\n    if (type === types[0]) price = 8.45;\n    else if (type === types[1]) price = 10.9;\n    else if (type === types[2]) price = 15;\n  } else if (day === days[1]) {\n    if (type === types[0]) price = 9.8;\n    else if (type === types[1]) price = 15.6;\n    else if (type === types[2]) price = 20;\n  } else if (day === days[2]) {\n    if (type === types[0]) price = 10.46;\n    else if (type === types[1]) price = 16;\n    else if (type === types[2]) price = 22.5;\n  }\n  if (type === types[0]) {\n    if (peoples >= 30) price = price * peoples * 0.85;\n    else price = price * peoples;\n  } else if (type === types[1]) {\n    if (peoples >= 100) price = price * peoples - 10 * price;\n    else price = price * peoples;\n  } else if (type === types[2]) {\n    if (peoples >= 10 && peoples <= 20) price = price * peoples * 0.95;\n    else price = price * peoples;\n  }\n  console.log(`Total price: ${price.toFixed(2)}`);\n}\nvacation(40, \"Regular\", \"Saturday\");
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Exercises/02.Vacantion.js b/JS Syntax Fundamentals – Exercises/02.Vacantion.js
--- a/JS Syntax Fundamentals – Exercises/02.Vacantion.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Exercises/02.Vacantion.js	(date 1698698407719)
@@ -28,4 +28,4 @@
   }
   console.log(`Total price: ${price.toFixed(2)}`);
 }
-vacation(40, "Regular", "Saturday");
\ No newline at end of file
+vacation(40, "Regular", "Saturday");
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"5f03b62f-27dc-4979-81c4-f2eeb8bcb69f\" name=\"Changes\" comment=\"11, 12 tasks add in JS Syntax Fundamentals - Exercises\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"JavaScript File\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;customColor&quot;: &quot;&quot;,\n  &quot;associatedIndex&quot;: 0\n}</component>\n  <component name=\"ProjectId\" id=\"2XBBTyRir0zz1mO3JAedhihq4lE\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;last_opened_file_path&quot;: &quot;/home/niki9011/JavaScript&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_interpreter_path&quot;: &quot;/home/niki9011/.nvm/versions/node/v21.0.0/bin/node&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\" selected=\"Node.js.6.Largest Number.js\">\n    <configuration name=\"7.Theatre Promotions.js\" type=\"NodeJSConfigurationType\" temporary=\"true\" nameIsGenerated=\"true\" path-to-js-file=\"$PROJECT_DIR$/JS Syntax Fundamentals – Lab/7.Theatre Promotions.js\" working-dir=\"$PROJECT_DIR$/JS Syntax Fundamentals – Lab\">\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Node.js.7.Theatre Promotions.js\" />\n        <item itemvalue=\"Node.js.7.Theatre Promotions.js\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"5f03b62f-27dc-4979-81c4-f2eeb8bcb69f\" name=\"Changes\" comment=\"\" />\n      <created>1698092607994</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1698092607994</updated>\n      <workItem from=\"1698092618437\" duration=\"422000\" />\n      <workItem from=\"1698095068743\" duration=\"247000\" />\n      <workItem from=\"1698095341358\" duration=\"297000\" />\n      <workItem from=\"1698174123489\" duration=\"71000\" />\n      <workItem from=\"1698175290865\" duration=\"29000\" />\n      <workItem from=\"1698183354321\" duration=\"3506000\" />\n      <workItem from=\"1698253572020\" duration=\"66000\" />\n      <workItem from=\"1698253675244\" duration=\"1101000\" />\n      <workItem from=\"1698344201335\" duration=\"291000\" />\n      <workItem from=\"1698445338553\" duration=\"421000\" />\n      <workItem from=\"1698527231980\" duration=\"101000\" />\n      <workItem from=\"1698610891078\" duration=\"59000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"add 2, 3 tasks\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698095373224</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698095373224</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"add 2, 3 tasks\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698095408215</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698095408215</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"add 4,5,6 tasks\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698183495150</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698183495150</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"change name tasks\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698183612567</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698183612567</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"07,08,09,10 tasks add\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698344327076</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698344327076</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"change 06 task\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698344440017</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698344440017</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"add 01,02,03 tasks in JS Syntax Fundamentals - Exercises and Automatically formatting code all tasks\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698445456324</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698445456324</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"04,05,06,07,08,09,10 tasks add in JS Syntax Fundamentals - Exercises\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698527310710</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698527310710</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"11, 12 tasks add in JS Syntax Fundamentals - Exercises\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1698610920197</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1698610920197</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"10\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"add 2, 3 tasks\" />\n    <MESSAGE value=\"add 4,5,6 tasks\" />\n    <MESSAGE value=\"change name tasks\" />\n    <MESSAGE value=\"07,08,09,10 tasks add\" />\n    <MESSAGE value=\"change 06 task\" />\n    <MESSAGE value=\"add 01,02,03 tasks in JS Syntax Fundamentals - Exercises and Automatically formatting code all tasks\" />\n    <MESSAGE value=\"04,05,06,07,08,09,10 tasks add in JS Syntax Fundamentals - Exercises\" />\n    <MESSAGE value=\"11, 12 tasks add in JS Syntax Fundamentals - Exercises\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"11, 12 tasks add in JS Syntax Fundamentals - Exercises\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"javascript\">\n          <url>file://$PROJECT_DIR$/JS Syntax Fundamentals – Lab/07.Theatre Promotions.js</url>\n          <line>4</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/.idea/workspace.xml	(date 1698698671728)
@@ -4,7 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="5f03b62f-27dc-4979-81c4-f2eeb8bcb69f" name="Changes" comment="11, 12 tasks add in JS Syntax Fundamentals - Exercises" />
+    <list default="true" id="5f03b62f-27dc-4979-81c4-f2eeb8bcb69f" name="Changes" comment="" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -79,7 +79,6 @@
       <workItem from="1698344201335" duration="291000" />
       <workItem from="1698445338553" duration="421000" />
       <workItem from="1698527231980" duration="101000" />
-      <workItem from="1698610891078" duration="59000" />
     </task>
     <task id="LOCAL-00001" summary="add 2, 3 tasks">
       <option name="closed" value="true" />
@@ -145,13 +144,13 @@
       <option name="project" value="LOCAL" />
       <updated>1698527310710</updated>
     </task>
-    <task id="LOCAL-00009" summary="11, 12 tasks add in JS Syntax Fundamentals - Exercises">
+    <task id="LOCAL-00009" summary="Revert &quot;11, 12 tasks add in JS Syntax Fundamentals - Exercises&quot;&#10;&#10;This reverts commit 5db79448">
       <option name="closed" value="true" />
-      <created>1698610920197</created>
+      <created>1698698467862</created>
       <option name="number" value="00009" />
       <option name="presentableId" value="LOCAL-00009" />
       <option name="project" value="LOCAL" />
-      <updated>1698610920197</updated>
+      <updated>1698698467862</updated>
     </task>
     <option name="localTasksCounter" value="10" />
     <servers />
@@ -167,8 +166,8 @@
     <MESSAGE value="change 06 task" />
     <MESSAGE value="add 01,02,03 tasks in JS Syntax Fundamentals - Exercises and Automatically formatting code all tasks" />
     <MESSAGE value="04,05,06,07,08,09,10 tasks add in JS Syntax Fundamentals - Exercises" />
-    <MESSAGE value="11, 12 tasks add in JS Syntax Fundamentals - Exercises" />
-    <option name="LAST_COMMIT_MESSAGE" value="11, 12 tasks add in JS Syntax Fundamentals - Exercises" />
+    <MESSAGE value="Revert &quot;11, 12 tasks add in JS Syntax Fundamentals - Exercises&quot;&#10;&#10;This reverts commit 5db79448" />
+    <option name="LAST_COMMIT_MESSAGE" value="Revert &quot;11, 12 tasks add in JS Syntax Fundamentals - Exercises&quot;&#10;&#10;This reverts commit 5db79448" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: JS Syntax Fundamentals – Lab/02.Student Information.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function student(name, age, grade) {\n  console.log(`Name: ${name}, Age: ${age}, Grade: ${grade.toFixed(2)}`);\n}\nstudent(\"Marry\", 12, 6.0);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/02.Student Information.js b/JS Syntax Fundamentals – Lab/02.Student Information.js
--- a/JS Syntax Fundamentals – Lab/02.Student Information.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/02.Student Information.js	(date 1698698393055)
@@ -1,4 +1,4 @@
 function student(name, age, grade) {
   console.log(`Name: ${name}, Age: ${age}, Grade: ${grade.toFixed(2)}`);
 }
-student("Marry", 12, 6.0);
\ No newline at end of file
+student("Marry", 12, 6.0);
Index: JS Syntax Fundamentals – Lab/08. Circle Area.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function circleArea(radius) {\n  let area;\n  if (typeof radius === \"number\") {\n    area = Math.PI * radius * radius;\n    console.log(area.toFixed(2));\n  } else {\n    console.log(\n      `We can not calculate the circle area, because we receive a ${typeof radius}.`\n    );\n  }\n}\n\ncircleArea(5);\ncircleArea(\"name\");
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/08. Circle Area.js b/JS Syntax Fundamentals – Lab/08. Circle Area.js
--- a/JS Syntax Fundamentals – Lab/08. Circle Area.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/08. Circle Area.js	(date 1698698393091)
@@ -11,4 +11,4 @@
 }
 
 circleArea(5);
-circleArea("name");
\ No newline at end of file
+circleArea("name");
Index: JS Syntax Fundamentals – Lab/04.Month Printer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function mountPrint(number) {\n  let mount;\n\n  switch (number) {\n    case 1:\n      mount = \"January\";\n      break;\n    case 2:\n      mount = \"February\";\n      break;\n    case 3:\n      mount = \"March\";\n      break;\n    case 4:\n      mount = \"April\";\n      break;\n    case 5:\n      mount = \"May\";\n      break;\n    case 6:\n      mount = \"June\";\n      break;\n    case 7:\n      mount = \"July\";\n      break;\n    case 8:\n      mount = \"August\";\n      break;\n    case 9:\n      mount = \"September\";\n      break;\n    case 10:\n      mount = \"October\";\n      break;\n    case 11:\n      mount = \"November\";\n      break;\n    case 12:\n      mount = \"December\";\n      break;\n    default:\n      mount = \"Error!\";\n  }\n  console.log(mount);\n}\nmountPrint(2);\nmountPrint(13);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/04.Month Printer.js b/JS Syntax Fundamentals – Lab/04.Month Printer.js
--- a/JS Syntax Fundamentals – Lab/04.Month Printer.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/04.Month Printer.js	(date 1698698407771)
@@ -44,4 +44,4 @@
   console.log(mount);
 }
 mountPrint(2);
-mountPrint(13);
\ No newline at end of file
+mountPrint(13);
Index: JS Syntax Fundamentals – Lab/10. Numbers from M to N.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function numbersPrint(m, n) {\n    for (let index = m; index >= n; index--) {\n        console.log(index);\n    }\n}\nnumbersPrint(6, 2)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/10. Numbers from M to N.js b/JS Syntax Fundamentals – Lab/10. Numbers from M to N.js
--- a/JS Syntax Fundamentals – Lab/10. Numbers from M to N.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/10. Numbers from M to N.js	(date 1698698392975)
@@ -3,4 +3,5 @@
         console.log(index);
     }
 }
+
 numbersPrint(6, 2)
\ No newline at end of file
Index: JS Syntax Fundamentals – Lab/03.Excellent Grade.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>function exellentGrade(grade) {\n  if (grade >= 5.5) {\n    console.log(\"Excellent\");\n  } else {\n    console.log(\"Not excellent\");\n  }\n}\nexellentGrade(5.5);\nexellentGrade(4.35);
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/JS Syntax Fundamentals – Lab/03.Excellent Grade.js b/JS Syntax Fundamentals – Lab/03.Excellent Grade.js
--- a/JS Syntax Fundamentals – Lab/03.Excellent Grade.js	(revision 89f1c9384d056782724647384b921db0e9c2c3fc)
+++ b/JS Syntax Fundamentals – Lab/03.Excellent Grade.js	(date 1698698407743)
@@ -6,4 +6,4 @@
   }
 }
 exellentGrade(5.5);
-exellentGrade(4.35);
\ No newline at end of file
+exellentGrade(4.35);
